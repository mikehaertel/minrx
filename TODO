Wed Aug 21 08:51:59 AM IDT 2024
===============================

This TODO list centralizes known development tasks and decisions to be
made relating to MinRX.  The order here is from Arnold Robbins, Mike
should feel free to rearrange.

Please revise the date at the top when this file is changed.

Decisions To Make (and then implement)
--------------------------------------

1. Distinguishing single byte locales from multibyte locales.
   A. In a single byte locale an invalid character
         - matches dot
	 - matches itself if given explicity in the regex
	 - matches within [bracketexprs]
   B. In a multibyte locale an invalid character
         - does not match dot
	 - matches itself if given explicity in the regex
	 - does not match within [bracketexprs]

   This interpretation follows GNU regex and GNU dfa, as per Arnold's
   tests discussed in private mail. Mike has not (yet) expressed an
   explicit opinion about this.

   Most, if not all, of the [bracketexpr] cases are currently handled
   in Arnold's setsearch library (https://github.com/arnoldrobbins/setsearch).
   It's up to Mike if he wishes to adapt his current [bracketexpr] code to
   follow suit.

2. Decisions relating to the setsearch library.
   A. Continued ownership of setsearch.  Mike needs to decide if he's
      going to take over the code, or if Arnold will continue to be
      responsible for it. If the former, Mike can decide whether or not
      to continue using Literate Programming for it.
   B. License to use? This depends upon the answer to (A). If Arnold
      will continue to own the code, he is leaning towards the MIT
      license. If Mike will take it on, it should probably be LGPL3
      licensed.

Development Tasks
-----------------

1. Adding support for setsearch into MinRX. Mike already knows how
   he wants to do that.
   - Arnold has a little bit of work to do per Mike's request in email.

2. Performance enhancements in searching ("add a fastmap optimization").

3. Add support for (misguided) POSIX 2024 non-greedy regexp operators:
   *?, +?, ??, and {...}? . This will be under control of an additional
   flag.

4. Convert to C for portability and possible size and speed gains.

5. Beta release with gawk for feedback from the real world. (Arnold to handle.)

6. Serious comparisons with other regexp matchers and writing up a paper
   for submission to an appropriate ACM or IEEE venue.
